d1 $ sound "bd ~ cp cp"

do
  resetCycles
  d2 $ sound "[hh*8,bd,sd*2]"

do
  resetCycles
  d3 $ sound "[cp*3,~ sd ~ hh*2]"

setcps (80/(60*4))

melody = "[2 2 2 _ 2 2 2 _ 2 4 0 1 2 _ _ _ 3 3 3 3 3 2 2 2 2 1 1 2 1 _ 4 _]/4"

bass = "[0 _ 0 _ 3 0 4 _]/4"

d1 $ note (scale "wholetone" melody)
   # sound "supercomparator" 
   # pan 0.8
 
d2 $ note (scale "major" bass)
# sound "superhammond" 
|- note 24

d3 $ note (scale "major" "[0 4 7 4]*2") 
|+ note (scale "major" bass)
# sound "gtr:0"
# pan 0.2

d4 $ silence

let 
  bass = "[0 _ 1 _ 2 _ -1 _]/4"
  sc = "wholetone"
in
do {
  d2 $ note (scale sc bass) # sound "bass1:0" |- note (-12) |+ note "[0,7,16]";
  d3 $ note (scale sc "[0 2 7 2]*2") 
     |+ note (scale sc bass) 
     # sound "gtr:0" # pan 0.2
}

d5 $ jux rev $ every 3 (hurry 3) $ sound "bd bd ~ [bd sd]" # room 2

d6 $ note (scale "wholetone" "{4 3 2 1 0}%8") # sound "superpiano" |+ note "[12|8]*2" # room 0.3 

xfade  6 $ silence

unmute 1

scaleList
